


Hello, Kitty! New Malware Me0ws Its Way into Mining Monero
New malware is making the rounds. It is called Kitty and leaves a cheeky note for cat lovers.


 by  Komfie
Manalo,
11 mins ago
















Subscribe


  It seems crypto jackers are getting into the habit of leaving cheeky notes to their victims.
Researchers at Imperva's Incapsula said a new piece malware called Kitty leaves a note for cat lovers. It attacks the Drupal content management system (CMS) to illegally mine cryptocurrency Monero.
A part of the blog post reads:

"Lastly, to win over kitty lovers' hearts, the attacker cheekily asks to leave his malware alone by printing 'me0w, don't delete pls i am a harmless, cute little kitty, me0w'."

The discovery of the Kitty malware came a month after the publication of the Drupalgeddon 2.0 exploit. A remote code execution vulnerability in Drupal versions 7.x and 8.x allows hackers to use several attack methods to infiltrate Drupal websites. Once the sites are compromised, crypto jackers can scan, conduct backdoor implementation and mine cryptocurrency, hijack accounts, and steal data.

The researchers added:

“During the inspection of the attacks blocked by our systems, we came across the ‘Kitty’ malware, an advanced Monero cryptocurrency miner, utilizing a ‘webminerpool’, an open source mining software for browsers. Once the Kitty bash script is executed, a PHP file named ‘kdrupal.php’ is written to the infected server disc. In doing so, the attacker reinforces their foothold in the infected server and guarantees dominance using a backdoor independent of the Drupal vulnerability.”

What makes Kitty unique is that it does not only compromise the server, internal network, and the website itself but also the visitors of the infected domains. The malware will first try to rewrite the index.php – a very common file in CMS website setups – and include it in the me0w.js script. Once added, the JavaScript-based files are scanned and sent to the mining list.

"In doing so, the attacker infects any future visitor on the infected web server sites to mine cryptocurrency for his disposal," Incapsula pointed out.

Cheeky crypto jackers
On Wednesday, we reported about an interesting conversation between Timothée Jeannin, a developer at screenshot API service provider ApiLeap, and a crypto jacker who not only advised Jeannin to update domain security but also asked for a job, apparently gaining confidence from the fact that he was able to breach the security protocol.
There was also the hacker who attacked the LA Times to mine digital currencies using the electronic gadgets of visitors to the newspaper website. He left a cheeky note telling the developers to fix their vulnerability “before a bad guy finds it.” 


function twitter_getEmbedJsonByUrl(url, callback){
	if(url){
		$.ajax({
    		url: "https://api.twitter.com/1/statuses/oembed.json?url="+url,
    		dataType: "jsonp",
    		async: false,
    		success: function(data){
    			callback(data.html, data);   
    		}
		});
	}
}

function twitter_verifyUrl(url){
	try{
		var urlb=url.split('twitter.com/');
		var urlc=urlb[1].split('/');
		var user=urlc[0];
		var status=urlc[1];
		var id=urlc[2];
		if(user && status && id)return true;
		
	} catch(e){
		
	}
	return false;
}

function twitter_parseContentElement(element){
	var atags=element.getElementsByTagName('a');
	var nod;
	if(atags && atags.length){
		for(var i=0;i<atags.length;i++){
			nod=atags[i];
			if((nod.host=='twitter.com' || nod.hostname=='twitter.com') && twitter_verifyUrl(nod.href)){
				(function(nod){
					twitter_getEmbedJsonByUrl(nod.href, function(html,json){
						nod.innerHTML=html;
						nod.classList.add("twitterembedurl");
					});
				})(nod);
			}
		}
	}
}

function twitter_initContentParser(){
	var defcls='twitterembedcontainer';
	var markcls='twitterembedcontainerm';
	var twicont=document.getElementsByClassName(defcls);
	for(var i=0;i<twicont.length;i++){
		if(!twicont[i].classList.contains(markcls)){
    		twitter_parseContentElement(twicont[i]);
    		twicont[i].classList.add(markcls);
		}
	}
}

 
×




.modalimagetarget {
    cursor: pointer;
}

.modalimagetarget:hover {opacity: 0.7;}

.modalImg {
    display: none;
    position: fixed;
    z-index: 10000; 
    padding-top: 100px; 
    left: 0;
    top: 0;
    width: 100%; 
    height: 100%; 
    overflow: auto; 
    background-color: rgb(0,0,0); 
    background-color: rgba(0,0,0,0.9); 
}

.modalImg .modal-content {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
}

.modalImg .caption {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
    text-align: center;
    color: #ccc;
    padding: 10px 0;
    height: 150px;
}

.modalImg .modal-content, .modalImg .caption {    
    -webkit-animation-name: zoom;
    -webkit-animation-duration: 0.6s;
    animation-name: zoom;
    animation-duration: 0.6s;
}

@-webkit-keyframes zoom {
    from {-webkit-transform:scale(0)} 
    to {-webkit-transform:scale(1)}
}

@keyframes  zoom {
    from {transform:scale(0)} 
    to {transform:scale(1)}
}

.modalImg .close {
    position: absolute;
    top: 15px;
    right: 35px;
    color: #f1f1f1;
    font-size: 40px;
    font-weight: bold;
    transition: 0.3s;
}

.modalImg .close:hover,
.modalImg .close:focus {
    color: #bbb;
    text-decoration: none;
    cursor: pointer;
}

@media  only screen and (max-width: 700px){
    .modalImg .modal-content {
        width: 100%;
    }
}


function componentModalImageInit(){
	var modal = document.getElementById('modalimage');
	var imgs = document.getElementsByClassName('modalimagetarget');
	var img;
	var modalImg = modal.getElementsByClassName("modal-content")[0];
	var captionText = modal.getElementsByClassName("caption")[0];
	
	$('.mainContainer').on('click', '.modalimagetarget', function(e){
		var img=$(this);
		modal.style.display = "block";
	    modalImg.src = img.attr('src');
	});
	
	var close = modal.getElementsByClassName("close")[0];
	close.onclick = function() { 
	    modal.style.display = "none";
	};
	modal.onclick=close.onclick;
}

 