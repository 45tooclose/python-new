


OKEx Puts ERC-20 Tokens in the Clear for Overflow Bug
After a smart contract allowed for a creation of unlimited tokens, OKEx quarantined Ethereum-based assets for a few days.


 by  Christine
Masters,
14 mins ago
















Subscribe


  OKEx, one of the largest exchanges, has announced ERC-20 tokens are safe and cleared for deposits and withdrawals.
https://twitter.com/OKEx_/status/991234895459508224
The reason for the recently blocked token activity was a smart contract exploit, known as BatchOverFlow, which allowed the generation of limitless tokens. In the past week, OKEx audited all its smart contracts and deemed them safe from the exploit.
At this point, it is unknown how many of the hundreds of tokens are vulnerable to the exploit. The usage of an integer variable allowed for an overflow and the creation of an unlimited number of tokens. One of the first digital assets affected was Beauty Chain (BEC), but experts at the Changelly exchange service suspect more tokens are suspect. The faulty transactions for BEC have been rolled back.
BEC is a relatively obscure digital asset with limited pricing information. But according to analysis by the Changelly team, there may be other smart contracts affected by the vulnerability. There is no way to change or roll back the effect of those contracts, since the Ethereum blockchain still holds the “code is law” rule. Changelly stressed that:

“However, with the touted “code-is-law” principle in Ethereum blockchain, there is no traditional well-known security response mechanism in place to remedy these vulnerable contracts!”

This means that exchanges will have to perform audits on ERC-20 tokens and smart contracts, a task that may prove too large. Otherwise, a token’s price may be manipulated in cases a BatchOverFlow vulnerability is exploited and not noticed immediately.
https://twitter.com/Quantstamp/status/990794159396147200
For now, the community has reacted, testing the currently available and better-known tokens. However, for lesser tokens or smart contracts, as well as decentralized exchanges, there may be hidden risks.
Smart contract security is becoming more important, since glitches in logic or technology have caused losses in the past. Some notable cases of smart contracts causing unexpected results were the DAO Hack, which led to the forking of Ethereum, and the Parity wallet hacks, the latter of which locked away $300 million’s worth of Ethereum. 


function twitter_getEmbedJsonByUrl(url, callback){
	if(url){
		$.ajax({
    		url: "https://api.twitter.com/1/statuses/oembed.json?url="+url,
    		dataType: "jsonp",
    		async: false,
    		success: function(data){
    			callback(data.html, data);   
    		}
		});
	}
}

function twitter_verifyUrl(url){
	try{
		var urlb=url.split('twitter.com/');
		var urlc=urlb[1].split('/');
		var user=urlc[0];
		var status=urlc[1];
		var id=urlc[2];
		if(user && status && id)return true;
		
	} catch(e){
		
	}
	return false;
}

function twitter_parseContentElement(element){
	var atags=element.getElementsByTagName('a');
	var nod;
	if(atags && atags.length){
		for(var i=0;i<atags.length;i++){
			nod=atags[i];
			if((nod.host=='twitter.com' || nod.hostname=='twitter.com') && twitter_verifyUrl(nod.href)){
				(function(nod){
					twitter_getEmbedJsonByUrl(nod.href, function(html,json){
						nod.innerHTML=html;
						nod.classList.add("twitterembedurl");
					});
				})(nod);
			}
		}
	}
}

function twitter_initContentParser(){
	var defcls='twitterembedcontainer';
	var markcls='twitterembedcontainerm';
	var twicont=document.getElementsByClassName(defcls);
	for(var i=0;i<twicont.length;i++){
		if(!twicont[i].classList.contains(markcls)){
    		twitter_parseContentElement(twicont[i]);
    		twicont[i].classList.add(markcls);
		}
	}
}

 
×




.modalimagetarget {
    cursor: pointer;
}

.modalimagetarget:hover {opacity: 0.7;}

.modalImg {
    display: none;
    position: fixed;
    z-index: 10000; 
    padding-top: 100px; 
    left: 0;
    top: 0;
    width: 100%; 
    height: 100%; 
    overflow: auto; 
    background-color: rgb(0,0,0); 
    background-color: rgba(0,0,0,0.9); 
}

.modalImg .modal-content {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
}

.modalImg .caption {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
    text-align: center;
    color: #ccc;
    padding: 10px 0;
    height: 150px;
}

.modalImg .modal-content, .modalImg .caption {    
    -webkit-animation-name: zoom;
    -webkit-animation-duration: 0.6s;
    animation-name: zoom;
    animation-duration: 0.6s;
}

@-webkit-keyframes zoom {
    from {-webkit-transform:scale(0)} 
    to {-webkit-transform:scale(1)}
}

@keyframes  zoom {
    from {transform:scale(0)} 
    to {transform:scale(1)}
}

.modalImg .close {
    position: absolute;
    top: 15px;
    right: 35px;
    color: #f1f1f1;
    font-size: 40px;
    font-weight: bold;
    transition: 0.3s;
}

.modalImg .close:hover,
.modalImg .close:focus {
    color: #bbb;
    text-decoration: none;
    cursor: pointer;
}

@media  only screen and (max-width: 700px){
    .modalImg .modal-content {
        width: 100%;
    }
}


function componentModalImageInit(){
	var modal = document.getElementById('modalimage');
	var imgs = document.getElementsByClassName('modalimagetarget');
	var img;
	var modalImg = modal.getElementsByClassName("modal-content")[0];
	var captionText = modal.getElementsByClassName("caption")[0];
	
	$('.mainContainer').on('click', '.modalimagetarget', function(e){
		var img=$(this);
		modal.style.display = "block";
	    modalImg.src = img.attr('src');
	});
	
	var close = modal.getElementsByClassName("close")[0];
	close.onclick = function() { 
	    modal.style.display = "none";
	};
	modal.onclick=close.onclick;
}

 