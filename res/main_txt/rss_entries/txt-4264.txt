


Crypto Jacker Asks for Job at Site He Breached
A crypto jacker has offered his expertise to the website he hijacked.


 by  Komfie
Manalo,
11 mins ago
















Subscribe


  Timothée Jeannin, a developer at screenshot API service provider ApiLeap, was surprised one morning to discover 150 alert emails in his inbox from the logging tool he uses. He quickly investigated the matter and found some guy was rapidly creating new accounts and illegally mining cryptocurrencies using all the free plan credit. What followed was a rather interesting conversation that culminated in the trespasser asking for a job at ApiLeap.
Jeannin wrote in a blog:

“He was making screenshots of this page https://cnhv.co/2uujp to mine cryptocurrencies on the machines hosting the chrome instances we use to make screenshots. I figured he was hanging out on ApiLeap’s homepage so I could reach him through Crisp, the tool we use to chat with potential clients.”

Jeannin contacted the guy and asked him to immediately stop mining cryptocurrencies using ApiLeap’s server because such activity is a violation of the site’s terms of service.
The guy admitted to mining cryptocurrencies but appeared more concerned about the possibility of legal proceedings against him. When told that those would unless he ceased his illegal activities, the guy blamed ApiLeap for not implementing “any mechanisms to prevent bots or automated access.”
The conversation included the following exchanges:
Jeannin: We allow users to create accounts freely, but we have various tools in place to ban people. We also have a contractor that can build a legal case if needed.
Guy: OK I understand. But it’s your duty to make sure that automated software cannot make an account on your site  
Jeannin: We might add more security if we feel the need.
Guy: I am web developer too. I can help you. I just created a tool in PHP for automatically creating accounts on your site.”
The guy even advised Jeannin’s team to implement a captcha as further improvement of their security protocols.
Jeannin also asked the guy if their website was the first he had attacked.
Guy: No. This is my hobby. For fun and profit.
Jeannin: Do you make decent money from Coinhive?
Guy: No. I have not made anything yet. So I thought of using such sites to mine some coins.
Things turned quite interesting when the attacker asked for a position on ApiLeap’s team. However, Jeannin declined the “application,” telling him they already have a developer.
Friendly note from hacker
The incident with ApiLeap is one of the several instances with an intriguing twist to a hacker intrusion.
In February, the LA Times was hit by a cryptojacker who forced its visitors to mine digital currencies using their gadgets. The hacker left a friendly note urging the newspaper to update its cloud storage settings.
The note read:

“Hello. This is a friendly warning that your Amazon AWS S3 bucket settings are wrong. Anyone can write to this bucket. Please fix this before a bad guy finds it.”
 


function twitter_getEmbedJsonByUrl(url, callback){
	if(url){
		$.ajax({
    		url: "https://api.twitter.com/1/statuses/oembed.json?url="+url,
    		dataType: "jsonp",
    		async: false,
    		success: function(data){
    			callback(data.html, data);   
    		}
		});
	}
}

function twitter_verifyUrl(url){
	try{
		var urlb=url.split('twitter.com/');
		var urlc=urlb[1].split('/');
		var user=urlc[0];
		var status=urlc[1];
		var id=urlc[2];
		if(user && status && id)return true;
		
	} catch(e){
		
	}
	return false;
}

function twitter_parseContentElement(element){
	var atags=element.getElementsByTagName('a');
	var nod;
	if(atags && atags.length){
		for(var i=0;i<atags.length;i++){
			nod=atags[i];
			if((nod.host=='twitter.com' || nod.hostname=='twitter.com') && twitter_verifyUrl(nod.href)){
				(function(nod){
					twitter_getEmbedJsonByUrl(nod.href, function(html,json){
						nod.innerHTML=html;
						nod.classList.add("twitterembedurl");
					});
				})(nod);
			}
		}
	}
}

function twitter_initContentParser(){
	var defcls='twitterembedcontainer';
	var markcls='twitterembedcontainerm';
	var twicont=document.getElementsByClassName(defcls);
	for(var i=0;i<twicont.length;i++){
		if(!twicont[i].classList.contains(markcls)){
    		twitter_parseContentElement(twicont[i]);
    		twicont[i].classList.add(markcls);
		}
	}
}

 
×




.modalimagetarget {
    cursor: pointer;
}

.modalimagetarget:hover {opacity: 0.7;}

.modalImg {
    display: none;
    position: fixed;
    z-index: 10000; 
    padding-top: 100px; 
    left: 0;
    top: 0;
    width: 100%; 
    height: 100%; 
    overflow: auto; 
    background-color: rgb(0,0,0); 
    background-color: rgba(0,0,0,0.9); 
}

.modalImg .modal-content {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
}

.modalImg .caption {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
    text-align: center;
    color: #ccc;
    padding: 10px 0;
    height: 150px;
}

.modalImg .modal-content, .modalImg .caption {    
    -webkit-animation-name: zoom;
    -webkit-animation-duration: 0.6s;
    animation-name: zoom;
    animation-duration: 0.6s;
}

@-webkit-keyframes zoom {
    from {-webkit-transform:scale(0)} 
    to {-webkit-transform:scale(1)}
}

@keyframes  zoom {
    from {transform:scale(0)} 
    to {transform:scale(1)}
}

.modalImg .close {
    position: absolute;
    top: 15px;
    right: 35px;
    color: #f1f1f1;
    font-size: 40px;
    font-weight: bold;
    transition: 0.3s;
}

.modalImg .close:hover,
.modalImg .close:focus {
    color: #bbb;
    text-decoration: none;
    cursor: pointer;
}

@media  only screen and (max-width: 700px){
    .modalImg .modal-content {
        width: 100%;
    }
}


function componentModalImageInit(){
	var modal = document.getElementById('modalimage');
	var imgs = document.getElementsByClassName('modalimagetarget');
	var img;
	var modalImg = modal.getElementsByClassName("modal-content")[0];
	var captionText = modal.getElementsByClassName("caption")[0];
	
	$('.mainContainer').on('click', '.modalimagetarget', function(e){
		var img=$(this);
		modal.style.display = "block";
	    modalImg.src = img.attr('src');
	});
	
	var close = modal.getElementsByClassName("close")[0];
	close.onclick = function() { 
	    modal.style.display = "none";
	};
	modal.onclick=close.onclick;
}

 