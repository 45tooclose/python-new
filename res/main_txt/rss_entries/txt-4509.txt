


MyEtherWallet Founder: No Plans to Reimburse Phishing Victims
Kosala Hemachandra, founder of MyEtherWallet, pointed out that it's not the organization's fault that the attack occurred and there are no plans to reimburse victims.


 by  Miguel
Gomez,
9 mins ago
















Subscribe


  Victims of a massive attack that involved hijacking Google’s DNS registration servers to steal Ether from users of MyEtherWallet will not be compensated, for now, the company’s founder said. According to Kosala Hemachandra, who spoke to Finance Magnates on the matter on Wednesday, there are no such plans “because all of the affected users went through a security warning when they went to MyEtherWallet.com saying ‘hey, this security certificate is invalid, do you still want to proceed?’”
The incident that took place over a week ago did not happen because of any flaw in MyEtherWallet’s system. This means that the team that developed it is technically not at fault for the attack.
Instead, hackers exploited a core part of the internet that allows domain names to resolve to their proper IP addresses and redirected users trying to enter MyEtherWallet to a Russian server containing a phishing page that looked nearly identical to MEW’s login page.

“For two hours, all the [MEW] traffic that goes through Amazon servers was redirected to a server in Russia,” Hemachandra explained.

Although it’s not the organization’s fault that victims lost over $150,000 in Ether, he feels that the community might be able to persuade him to reimburse them.

“[Reimbursing] is not something we’re planning to do because of all these things that happened, and they did get a warning. But, yeah, if the community reaches out to us and they think that it’s our fault in a way, that’s something we can look into for sure,” he added.

He also points to the fact that MEW experiences “an enormous amount of phishing attacks every single day,” adding that there are many copycat domains attempting to lure people who write the platform’s URL incorrectly.
Unfortunately, there was no realistic way that MEW could have prevented this sophisticated phishing campaign from happening, but Hemachandra is looking for ways to address the issue nonetheless.

“We can only mitigate, and we can only make it harder for people to do things like this, but I honestly don’t think there’s a hundred-percent complete fix that will come out within the foreseeable future,” he said.
 


function twitter_getEmbedJsonByUrl(url, callback){
	if(url){
		$.ajax({
    		url: "https://api.twitter.com/1/statuses/oembed.json?url="+url,
    		dataType: "jsonp",
    		async: false,
    		success: function(data){
    			callback(data.html, data);   
    		}
		});
	}
}

function twitter_verifyUrl(url){
	try{
		var urlb=url.split('twitter.com/');
		var urlc=urlb[1].split('/');
		var user=urlc[0];
		var status=urlc[1];
		var id=urlc[2];
		if(user && status && id)return true;
		
	} catch(e){
		
	}
	return false;
}

function twitter_parseContentElement(element){
	var atags=element.getElementsByTagName('a');
	var nod;
	if(atags && atags.length){
		for(var i=0;i<atags.length;i++){
			nod=atags[i];
			if((nod.host=='twitter.com' || nod.hostname=='twitter.com') && twitter_verifyUrl(nod.href)){
				(function(nod){
					twitter_getEmbedJsonByUrl(nod.href, function(html,json){
						nod.innerHTML=html;
						nod.classList.add("twitterembedurl");
					});
				})(nod);
			}
		}
	}
}

function twitter_initContentParser(){
	var defcls='twitterembedcontainer';
	var markcls='twitterembedcontainerm';
	var twicont=document.getElementsByClassName(defcls);
	for(var i=0;i<twicont.length;i++){
		if(!twicont[i].classList.contains(markcls)){
    		twitter_parseContentElement(twicont[i]);
    		twicont[i].classList.add(markcls);
		}
	}
}

 
×




.modalimagetarget {
    cursor: pointer;
}

.modalimagetarget:hover {opacity: 0.7;}

.modalImg {
    display: none;
    position: fixed;
    z-index: 10000; 
    padding-top: 100px; 
    left: 0;
    top: 0;
    width: 100%; 
    height: 100%; 
    overflow: auto; 
    background-color: rgb(0,0,0); 
    background-color: rgba(0,0,0,0.9); 
}

.modalImg .modal-content {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
}

.modalImg .caption {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
    text-align: center;
    color: #ccc;
    padding: 10px 0;
    height: 150px;
}

.modalImg .modal-content, .modalImg .caption {    
    -webkit-animation-name: zoom;
    -webkit-animation-duration: 0.6s;
    animation-name: zoom;
    animation-duration: 0.6s;
}

@-webkit-keyframes zoom {
    from {-webkit-transform:scale(0)} 
    to {-webkit-transform:scale(1)}
}

@keyframes  zoom {
    from {transform:scale(0)} 
    to {transform:scale(1)}
}

.modalImg .close {
    position: absolute;
    top: 15px;
    right: 35px;
    color: #f1f1f1;
    font-size: 40px;
    font-weight: bold;
    transition: 0.3s;
}

.modalImg .close:hover,
.modalImg .close:focus {
    color: #bbb;
    text-decoration: none;
    cursor: pointer;
}

@media  only screen and (max-width: 700px){
    .modalImg .modal-content {
        width: 100%;
    }
}


function componentModalImageInit(){
	var modal = document.getElementById('modalimage');
	var imgs = document.getElementsByClassName('modalimagetarget');
	var img;
	var modalImg = modal.getElementsByClassName("modal-content")[0];
	var captionText = modal.getElementsByClassName("caption")[0];
	
	$('.mainContainer').on('click', '.modalimagetarget', function(e){
		var img=$(this);
		modal.style.display = "block";
	    modalImg.src = img.attr('src');
	});
	
	var close = modal.getElementsByClassName("close")[0];
	close.onclick = function() { 
	    modal.style.display = "none";
	};
	modal.onclick=close.onclick;
}

 