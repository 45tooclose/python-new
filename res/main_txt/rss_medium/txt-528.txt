
Proof of Stake: An Introduction17.22 TWh of electricity are consumed each year to secure the Ethereum network. This is more than the entire country of Cuba’s annual energy needs, which can’t help but seem a bit excessive. While proof of work consensus algorithms are easier to reason about, they aren’t the only option available when solving the consensus problem. Proof of stake algorithms are rapidly developing that seek to:Provide equivalent security to PoW.Be less susceptible to centralization/ cartel formation than their PoW predecessors.Be more efficient in terms of physically scarce resources than their PoW predecessors.Image Source: fitvitalik.ioProof of work is a consensus model where many un-trusted nodes compute thousands of hashes of a candidate block until a valid one is discovered. Once this block is discovered, the race to mine block n+1 is on! Miners guess nonces repeatedly until their hash of the previous block + unfinalized transaction data + nonce has enough leading 0s to satisfy the current difficulty level. The difficulty level is determined automatically in order to stabilize the rate at which new blocks are mined. For more details, see the Bitcoin Wiki. The work in proof of work is done by the mining parties’ computers, which costs our miners electricity, and computing time.Blockchain formation. The main chain (black) consists of the longest series of blocks from the genesis block (green) to the current block. Orphan blocks (purple) exist outside of the main chain. (Image Source: Wikipedia)If a miner produces a block that others deem invalid, they will not include it in their chains. This block becomes orphaned at that point, and the block reward granted to its miner no longer exists.Proof of work works because each miner is incentivized to mine on one chain only by the simple fact that mining on any incorrect chain will likely result in lost resources (electricity, computing time) when other miners don’t include their block. Without the cost of electricity, hardware, and time, rational miners would try to extend every candidate chain indefinitely, so that they have the highest likelihood of creating a winning block that is included. This would prevent the network from ever reaching consensus, and no reliable distributed ledger could exist.The approach a PoS network takes while arriving at consensus necessarily differs from that of PoW.The CAP theorem states that we can have only two of the traits shown above.In general, PoS consensus algorithms seek to employ a token resource instead of a physical one to guarantee their security. Two archetypes of PoS consensus algorithms are chain-based and Byzantine. Each chooses different strengths from the unachievable trifecta specified in the CAP Theorem. We will explore consensus algorithms that fall into each category.Some common pitfalls of PoS networks include nothing at stake, stake grinding, and liquidity-related problems. There are techniques for dealing with these issues such as slashing, better validator randomization, and staking-specific tokens, respectively, but various forms of these problems can still present themselves in major projects.