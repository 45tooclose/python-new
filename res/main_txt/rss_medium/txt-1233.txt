
Free voting and vote expiration: a proposal to improve DPoS cryptocurrenciesAs Vitalik Buterin recently wrote discussed in an article about blockchain governance, voting on the blockchain is an imperfect system.As they currently exist, all blockchain voting systems suffer from the issue of non-representativeness. As discussed by Vitalik, the large, active coin holders are the ones who get to make the decisions. This results in the system failing to properly represent users who utilize a cryptocurrency as a medium-of-exchange, those who use cold wallets, or those who simply don’t have very much of it.However, the trade-off is that on-blockchain voting is extremely resistant to sybil-attacks, the creation of false identities in order to game a vote. Sybil-resistance is often more important than representativeness. A system that attempts to represent all users well but lacks sybil-resistance would quickly become representative of only a single group: those influencing it through a sybil attack.For this reason, I believe that blockchain governance and voting is here to stay. A system that is nearly impossible to cheat is a valuable one.However, some of the largest systems that implement blockchain voting are extremely flawed, suffering from vote-buying, high fees, and a stagnant political environment.As it currently stands, Lisk and its forks (Ark, RISE, OXYCOIN, KAPU, etc.) are some of the largest systems currently using DPoS, and some of the most flawed. For the sake of simplicity, this proposal will focus on Lisk.Problem 1: High FeesOne of the largest issues currently burdening DPoS systems is the high barrier to entry. The fees are quite high, and voting is often considered to not be worth it unless one holds a large sum of the currency.In Lisk, one is allowed to delegate their tokens to 101 individuals, called delegates. However, only 33 votes may be modified per vote transaction. So, in order to take advantage of all 101 votes, a user must make four transactions, the first three submitting 33 votes, and the final one submitting 2. Regardless of the number of votes changed, the fee is static in Lisk.At the time of writing, the Lisk/USD exchange rate is $14.11. So, in order for a Lisk user to take advantage of all of their votes they’d have to pay a whopping $56.44 in network fees. This is far too steep for the average user.Problem 2: Winning group escalationI’ve frequented the Lisk community since I discovered the project in early 2017. In that time, I’ve seen little to no change in the set of forging delegates.This is due to the following:Every forging Lisk delegate offers some form of voter incentive. Voters receive a portion of a delegate’s minted Lisk in exchange for their vote.Each Lisk wallet is allowed 101 votes, which is the same as the number of forging slots.Users are therefore incentivized to simply vote for the currently forging delegates to maximize their payouts.This leads to the top 101 delegates having a fairly uniform vote weight, and an extremely sharp drop-off between delegate slot 101 and 102.If you look on the Lisk delegate monitor, you’ll see that delegates in the top 101 have between 30 and 40 million Lisk in vote weight. However, the vote weight of delegate 102 at this writing is only 15,031,398.The different between delegate position 1 and delegate position 101 is 11,849,893 LSK. The difference between delegate position 101 and position 102 is 16,440,790 LSK. This means that the difference across the entire forging delegate set (position 1 to 101) is smaller than the difference between the last forging delegate and the first standby delegate (101 to 102). This is not indicative of a healthy voting system.However, the winning group escalation problem only occurs when the number of votes available to users is equal to the number of available delegate slots.Problem 3: StagnationThe winning group escalation problem contributes to this problem greatly, but this is present in nearly every cryptocurrency that implements DPoS. Voters will often set their votes once and then no longer pay attention to the DPoS (psuedo)democracy. This is bad in the long run as voters should be encouraged to regularly seek the best delegates to vote for.A possible solutionPart 1: Vote expirationVotes could be made to have a lifespan of (for example) one calendar year.The system would work as follows:A user casts a vote for a delegate. This vote transaction is stored within a block, which gives it a permanent immutable timestamp.After 3,154,000 blocks (one year with 10 second blocks), the vote expires.A user may choose to renew a vote which extends the vote lifespan for another 3,154,000 blocks from the renewal transaction.This system could be implemented with extremely little additional computational overhead using the following method. For the sake of simplicity the following is written from the perspective of a block creator/forging delegate, but the same logic would be followed by nodes validating received blocks. Additionally, a network constant called vote lifespan is set equal to the number of blocks that a vote lasts for (3.1 million in the above example).Whenever a block is created, the block creator checks the block with height equal to the current height minus the vote lifespan (an O(1) operation) for any vote transactions.Then, for each vote transaction, the block creator searches through the transaction history of the vote creator for any vote renewal transactions. The block creator only has to check for vote update transactions that occurred in the last x blocks, where x is equal to the vote lifespan.This is an O(n) operation. However, n is bounded by the vote lifespan and is unlikely to be very large.This would allow for a simple, yet effective, vote expiration system which addresses the problem of stagnation.Part 2: Free votingFees in blockchains exist for two reasonsTo compensate miners/block creators for their PoW/PoSTo avoid network spamSo far, fees played a much more important in one of these than the other. Bitcoin has suffered from multiple spam attacks in recent history, and they’ve been effective in slowing down the network. On the flip-side, BITMAIN made more money than Nvidia last year, with most of that revenue coming from block rewards, not fees.From this evidence it can be concluded that the current primary purpose of fees is to prevent bad actors actors from spamming the network.So by this logic, why should a good actor have to pay to vote?I am not arguing for the abolishment of fees as a whole, as they play a crucial role in creating a sustainable blockchain ecosystem. However, for the purpose of vote transactions in a DPoS system, fees can be removed entirely without compromising the network.I propose the Good Actors Vote Free system, or GAVF for short.A user is eligible for free voting through GAVF if the following conditions are met their address has made at least one standard transaction on which they paid a fee. For example, a standard Lisk transaction in which tokens are moved from one address to another, and a network fee of .1 LSK was paid.Then, provided the user meets this requirement, they can send vote transactions which will be processed by the network for free if the following conditions are met (like above, the vote lifespan is a network constant equal to the number of blocks that a vote is valid for):The vote adds a delegate that the voter has not added within the last x blocks, where x is equal to the vote lifespan.The vote removes a delegate that the voter has not removed within the last x blocks, where x is equal to the vote lifespan.The vote renews a vote for a delegate that the voter has not renewed their vote for within the last x blocks, where x is equal to the vote lifespan.The voter has made less than x vote transactions within the last y blocks. An ideal value for x would be the number of vote slots divided by the number of votes affected per transactions (currently 101 and 33 in the Lisk network) rounded up. The ideal value for y would be more arbitrary, perhaps 8640, the number of blocks in a day.Under these rules, the average user could cast votes and renew them regularly without having to pay any fees whatsoever.However, in cases where a user (or attacker) wants to shuffle their votes around between the same delegates in a short period of time, a small fee would be required to prevent network spam. This would result in a bad actor with the intention of spamming the network being forced to pay fees as they would quickly exhaust their pool of delegates to vote/unvote/renew. Additionally, an attacker could not simply use new addresses for each spam vote transaction as they would have to meet the address eligibility requirements described above, which involves paying a fee.GAVF would allow normal Lisk users to participate in the voting process without paying fees, and would effectively prevent attackers from spamming the network with vote transactions.Part 3: Reduced number of votes per addressAt the moment, Lisk allows 101 votes per address and has 101 slots for forging delegates. These two numbers being equal to one another results in the winning group escalation problem described above.There is no particular magic number of votes that would work perfectly, but ideally the number would be large enough for the user to select a group of delegates he/she likes, and small enough that the winning group escalation effect is mitigated.ConclusionThrough this 3-part proposed system, the problems of stagnation, winning group escalation, and high vote fees could all be addressed. While it would negligibly increase the complexity of processing a block, it would be well worth it for a healthier network. Thank you for reading.