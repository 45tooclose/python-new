
How To: Run an EtherGem Node on a Raspberry Pi 3EtherGem — $EGEMHow To: Run an EtherGem Node on a Raspberry Pi 3EtherGem, “EGEM,” is a pure community-based coin with no pre mine. True to its roots as a cryptocurrency, the Proof of Work mining community will always be a part of the EGEM future and is the foundation of the EGEM launch. There is no ICO on EGEM and EGEM is its own primary blockchain, not just a token or concept on another chain. Technically EGEM is an Ethereum chain as described in the yellow paper, with EIP150, EIP155, EIP158 applied from block 0In this article I will run you through the steps to set up an EtherGem Node on a Raspberry Pi 3. Running your own full node will give you direct access to the EtherGem blockchain.Step 1: Update and Upgrade your SystemThis part is simple enough. Just enter:apt-get update && apt-get upgrade -yStep 2: Install build-essential toolsapt-get install -y build-essentialThis is required for building Debian packagesStep 3: Install Screenapt install screenThis will let you manage multiple programs from the command line in one terminal.Step 4: Install Gitapt install git -yThis installs git, which we will need to clone go-egem and egem-network-intelligence.Step 5: Download and Install the Go Tools5.1) wget https://storage.googleapis.com/golang/go1.10.linux-armv61.tar.gzThis will get the required version for the Pi35.2) tar -C /usr/local -xzf go1.10.linux-armv61.tar.gzThis unpacks the tools5.3)mkdir -p ~/go: echo “export GOPATH=$HOME/go” >> ~/.bashrcthenecho “export PATH=$PATH:$HOME/go/bin:/usr/local/go/bin” >> ~/.bashrc && source ~/.bashrcThis will set up Go Tools and set the environment variable to point to the directory in which it was installedStep 6: Clone Go-Egem and Build6.1) git clone https://github.com/TeamEGEM/go-egem.gitThis clones go-egem into your current directory6.2) cd go-egem && make egemThis will move into the go-egem directory and build go-egem.Step 7: Start & Sync Go-Egem/root/go-egem/build/bin/egem — datadir ~/livenet/ — rpc consoleThis will start go-egem and set up the data directory. You will then see go-egem syncingYou will know when it is finished by typing eth.syncing into the terminal. If syncing is completed, it will return false. If not you will get a response with the current blockStep 8: Restart Node with Screenexit go-egem with Ctrl+C (or Ctrl+d if that does not work). Then start a new screen with the following:screen -S go-egemThis will start a screen with the name go-egem. Then just start your node up again:/root/go-egem/build/bin/egem — datadir ~/livenet/ — rpc consoleNow you can press the following to detach the screenCtrl+ATHENCtrl+DThis will keep go-egem running. You can type the following to see all screen instancesscreen -lsThen type the following to attach to the screenscreen -r go-egem OR screen -r 10598 (make sure its the Name/# on your terminal)Repeat the same steps above to detach the screen.