
How EtherScan shows transfers of tokens from 0x0 address, even-though no one has the private key? Good Question!Actually, this is slightly technical: etherscan.io just depends on Solidity Events to show the transactions. You can imagine Solidity Events like messages from Solidity code to the outer world. Those Events (messages) usually represent what is happening for most cases but for minor cases they does not.Actually, some smart contracts (Mintable tokens) uses this events by passing 0x0 as the “from” address. The code looks like:Transfer(address(0), _to, _amount)Technically speaking, Solidity Events as like messages (from Solidity to the subscribed listener) and they do not necessarily reflect what is actually happening.Code sample of a Mintable Token:function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {totalSupply_ = totalSupply_.add(_amount);balances[_to] = balances[_to].add(_amount);emit Mint(_to, _amount);emit Transfer(address(0), _to, _amount);return true;}So, there is nothing actually transferred from 0x0 address. It is just how etherscan.io displayed the Events that it reads from Ethereum network.