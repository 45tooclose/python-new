
Exploring Crypto-Economic Design (Part 1)Photo by Dan Lohmar on UnsplashIt’s pretty clear by now that that crypto-economic design is not just a new name for mechanism design. In fact, I think it’s now well established that we are in fact dealing with a genuinely new, multi-disciplinary field. As Michael Zargham et al point out (here), it’s actually a combination of game theory, control systems engineering, psychology, economics, computer science and social choice theory. Trent McConaghy has suggested (here) that AI , particularly machine learning optimisation and evolutionary algorithm, could providing interesting insights into crypto-economic design. He does admit that for now “we have no tools, so we have to make do with what we have.” In this spirit, he has suggested that maybe we need to build a catalog of reusable building blocks, similar to how the Gang of Four tried to codify software design as design patterns. Teemu Paivinen has suggested we could maybe build simulated games in which to test our designs, which some might argue is the basis for a great sci-fi novel: a game-simulation Matrix. But, I do think simulation, with bots, humans or both, is the long-term solution.But, in the spirit of “making do with what we have”, here are my thoughts on what a pragmatic approach to crypto-economic design might look like, based on a recent consulting project, where we advised the Kriptan Network, a privacy-centric, identity verification network.The Ponzi ProblemThe first issue that I think many designs will run into is Ponzi-avoidance. With tokens you are always looking to reward early adopters, as they are the most precious resource when you are trying to get your platform off the ground. Your first customer is priceless. Maybe the first thousand get you to critical mass then no stop ’til moon. But in rewarding the early adopters, you have to be careful not to create a system where latecomers end up paying for them. In a zero-sum game, you end up with a pure Ponzi, with latecomers as the bag-holders of the early minority. So there has to be a genuine positive sum value created. The platform has to be more valuable to everyone as more people join. Real network effects, as in Metcalfe’s Law: N-squared. Providing a service to lots of people does not equal a network with network effects. In fact, many businesses have negative network effects e.g. when my ISP grows their customer base, my connection slows down. Positive network effects have to be carefully crafted. Without real network effects, it’s very hard to design a non-Ponzi token.The Future Competitive EnvironmentAs tokens seem like magic when everyone is making money today, it can be easy to forget that the money earned today is made by selling to bag-holders who in turn believe in future adoption. It’s even easier to forget that the future won’t look like today. There may actually be some real competition in the future and these new competitors will be hungry to make their own gains, while your early adopters might be off crashing their lambos. So while Ponzi-avoidance focuses on creating positive sum value through network effects, here we are more focused on ensuring you have a future service that works at the price point that a future user will be willing to pay. And when we say “pay” we include models that require users to stake or burn tokens. Tokens which could be trading at exorbitant prices.Lesson 1: Start At The EndSo combining these two issues, we believe crypto-economic design must start with the end state in mind. And when we say end state, we are leaning heavily here on control systems engineering. So let’s do a quick aside on that. Say we are designing a temperature control system which can measure and adjust the temperature of the room. The user is provided with an input panel to set their desired temperature. The control system will try to ensure the room quickly moves to that temperature and stays there. If you heat / cool the room too fast, then maybe it’s uncomfortable for the user (turbo-boosted blasts of cold air will cool the room faster, for sure) or maybe it overshoots on the way up before settling down to the right temperature. Or badly designed control systems might get into cycles, they make it one degree to hot, then over-adjust and make it one degree too cold etc.So we want to take control system ideas and adapt them for economic systems. We want to get to steady-state where every newcomer can join the network and pay an amount for using the network that they believe is value for money, combining subjective value (does it meet their needs at this price?) and objective value (is it good value versus what they can pay elsewhere for the same or for a substitute service?). The system should have control mechanisms, via state feedback, to ensure that if the system is disturbed from this equilibrium, that there are financial incentives for participants to bring it back to equilibrium (and yes, we have shifted language from control systems “steady-state” to it’s equivalent: Nash equilibrium in game theory). From a personal perspective, I find that it’s easier to reason in a control systems model, than in the game theoretical approach. But don’t forget it’s one hell of a noisy control system: the sensors and the controllers are people (or AI bots) making financial decisions!Lesson 2: Assume There Are Some Rational ActorsLet’s not make the same mistake as generations of economists and pretend human economic actors are rational and self-interested. Instead let’s just assume we have some homo economicus actors in the mix, with maybe a another subset of actors who are vaguely paying attention and most actors with no clue what’s going on, where their strategy is to just follow the herd. You could argue that in consumer markets you have less rational actors than when targeting enterprise markets and governments. But then again you could also argue that as consumers we often have skin in the same, where businesses / governments spend other people’s money. So either way, the point is we are designing a control system where only a small subset of our sensors / controllers are actually working, another subset work intermittently and the rest could almost be seen as useless, if they weren’t all so weirdly correlated.In the case of the Kriptan Network, there will be a lot of businesses using the network, so you would hope that some participants are looking at ongoing costs and weighing up token purchasing decisions based on the net present value of future outgoings. We call these the arbitrageurs. They will buy / sell the tokens when they are trading below / above intrinsic value. In the Kriptan model, what we call “relying parties” get discounts when they activate tokens, so they will buy tokens to get discounts when the price is low. They may also pay in tokens (i.e. dump them) when they think the tokens they hold are overpriced (essentially they sell them at the fiat exchange rate). They also will factor in the currency risk of holding tokens. In the case of the Kriptan network we carefully designed the tokens so that the intrinsic value of the tokens could be very accurately calculated. We used discount tokens so that the savings available to token holders were clear. We made the validator nodes in the network buy tokens in proportion to their revenue, so they would also have a clear link between the token price and their own cash flows. By making it easy in this way, we hoped to maximise the number of conscientious arbitrageurs. And why? Because arbitrageurs are our controllers in the control systems model. They regulate token prices, like a heating control system regulates temperature.Lesson 3: It’s Security, So Keep It SimpleWhatever we categorise it as, and whatever tools and frameworks be build to do it, crypto-economics is fundamentally about security. Therefore, while we are building up our knowledge base of best practice techniques, we need to ensure we avoid unnecessary complexity at all times. This becomes a challenge in real-world business scenarios, where there may be many project contributors, each with their own wish list of token characteristics.In the case of the Kriptan Network, we wanted a medium of exchange token, with low volatility that delivered an unparalleled level of regulatory compliance. It needed to incentivise a diverse group of users: corporations, startups, SMEs, governments and citizens. We also wanted something that wasn’t subject to massive speculative hype.During the design process, it was suggested several times that we would need two or more different tokens to satisfy these goals. At one point, we had a tokens that would start out as ERC20 token which would then evolve into another token. As we worked through all the opportunities for market manipulation that this might have resulted in, my gut instinct was to push back and to keep it simple. In the end, we found a design was simple, elegant and met all the requirements above. We hope it will become one of the building blocks of reusable crypto-economic design patterns. We called it the two-sided network token because it can be modified for use in any two-sided network. The token design document here provides more information about the final design, as well as more detail on the design process.In the next blog post, I’ll dive more into two-sided network token and explain some more of the design challenges we faced.