
Prez notes about Algorand, BitCoin Replacement from MIT ProfessorSummaryAlgorand is new, replacement blockchain proposal to replace BitCoin and improve on the early technical issuesI attended IEEE sponsored a presentation on Apr 5 by MIT Professor Silvio Micali attended by around 100 mostly technical people at MIT. The audience was generally impressed and only asked clarifying questions. There were no questions that were highly skeptical nor did I meet people who wereAlgorand aims to address many of the BitCoin issues of scalability, security, poor governance,Part of the core concept is an assumption that most actors are honestAlgorand is a startup funded with $4M from Pillar and USVPaul’s view: this is worth watching to see feedback from the community and to understand the limits when it starts being built as it seemed too good to be true.Multiple presentations are on YouTube about AlgorandNotesKeys features of a distributed ledgerReadable by allWriteable by allTamperproofGood forNotarization and storageOrdering of chãosDisintermediation (Transatlantic use manual escrow. Blockchain with smart contract (conditional statement)Payments and cryptocurrenciesBitcoin vs Algorand: disagreement in on implementation, not core concept ofBitcoin uses eventual consensus via proof of work Proof of work: miningBitcoin technical problemsA massive amount of electricityThe exogenous concentration of power in miners, and therefore corruptible because of concentration and low margin business (3 mining pools control Bitcoin; 2 mining pools control Ethereum)Concentration power is antithetical to goals of a blockchainExogenous vulnerability — miners go bankruptScalability (Unclear if BitCoin supports 100M users)Ambiguity because of forks (two miners solving at the same time)Long true latencySECURITY? (Not against network attacks)AlgorandOverviewNo forksNo proof of worksUse Byzantine AgreementMain idea: message-passing Byzantine agreementMain assumption: the honest majority of moneyAdvantagesTrivial computation: no minersTrue decentralization: a single class of usersFinality of payments (no forks)Scalability