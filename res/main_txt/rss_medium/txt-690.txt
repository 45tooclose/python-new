
Step by Step Towards Hyperledger Fabric — Part 1Blockchain is the new buzz word in the industry now a days. But finding good resources to learn this fascinating technology is not a cake walk. To make it easier for others i am starting a series in the field of Blockchain/ DLT platforms. I will try to cover each and every step require to get a hands on these technologies. Firstly, I am starting with Hyperledger Fabric.Hyperledger Fabric is one of the projects under Hyperledger umbrella.Hyperldger is platform for distributed ledger solutions, underpinned by a modular architecture delivering high degrees of confidentiality, resiliency, flexibility and scalability.Lets start over first Step by Step hands on:Firstly we have to learn how to install the prerequisite for the Hyperledger Fabric:o Install cURL.o Instll Node.js and npm package manager.o Install Go Language.o Install Docker and Docker Compose.o Install Git.o Install Pipo Install Hyperledger Fabric on Ubuntu LTS 16.0.4Once we are done with installing prerequisite, we will be going to hands on with:1. Build & Deploy your first-network on Hyperledger Fabric2. Build & Deploy a demo example Fabcar on Hyperledger FabricWe are using Ubuntu LTS 16.04 for this hands on tutorial:Step 1:Press Ctrl + Alt + T to open a terminal$ sudo suEnter your password$ cdStep 2: Install Google golang$ cd $HOME/ && wget https://storage.googleapis.com/golang/go1.8.1.linux-amd64.tar.gz$ tar -xvf go1.8.1.linux-amd64.tar.gzSet the go path$ mkdir $HOME/gopath$ export GOPATH=$HOME/gopath$ export GOROOT=$HOME/go$ export PATH=$PATH:$GOROOT/bin$ go versionStep 3: Install libltdl-dev$ apt-get install libltdl-devStep 4: Install docker-­ce $ wget https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/docker­-ce_17.06.0~ce­-0~ubuntu_amd64.deb$ dpkg ­i docker-­ce_17.06.0~ce-­0~ubuntu_amd64.deb$ docker -­ -­versionNote: The above approach simply leverages the Docker images that the Hyperledger Fabric project publishes to Docker Hub$ docker run hello­-worldStep 5: Installl python-­pip$ apt-­get install python­-pip$ pip ­- -­versionStep 6: Install docker­-compose$ pip install docker­-compose$ docker­-compose ­- -­versionStep 7: Install git$ apt­-get install git$ git ­-­ -versionStep 8: Install curl$ apt-­get install curl$ curl ­- -versionStep 9: Install node.js and npm$ curl ­sL https://deb.nodesource.com/setup_8.x | sudo ­-E bash ­-$ node -­ -­version$ npm ­- -versionStep 10: Clone the fabric-­samples from the github$ git clone https://github.com/hyperledger/fabric-­samples.gitStep 11: Enter the fabric-­samples directory and install the platform specific binaries$ cd fabric-­samples$ curl -­sSL https://goo.gl/byy2Qj | bash -­s 1.0.5$ docker imagesIf everything goes well you will see the above output on your screen.Step 12: To have a look on the download binaries execute the following from your terminal:$ cd bin$ lsStep 13: Enter into the first-network directory$ cd ../$ cd first-network$ lsStep 14: Generate the required certificates and articates for your first network$ ./byfn.sh -m generateStep 15: To see the generate certificates use the following command:$ ls$ cd crypto-config$ lsStep 16: Create your first network using the following command$ cd ../$ ./byfn.sh -m upYou will see the above message once your first-network is created using Hyperledger Fabric.Step 17: Check the generates images and running containers using the following command:$ docker images$ docker psStep 18: To bring down the created network executed the following command$ ./byfn.sh -m downStep 19: You can check the created images have been removed using the following:$ docker imagesWe have successfully created our first-network using Hyperledger Fabric.Now lets try another exampleStep 20: Move to the fabcar directory$ cd ../$ ls$ cd fabcarStep 21: Install the node modules using the following command$ sudo npm installStep 22: Install grpc module for communication with Hyperledger Fabric using the following command:$ sudo npm install grpcStep 23: Start the Hyperledger Fabric network for fabcar by executing the following command:$ ./startFabric.shStep 24: To enroll the users firstly you have to enroll an Admin that will help to enroll other users withHyperledger Fabric network of Fabcar.$ node enrollAdmin.jsYou can find the private and public key for admin using the following$ ls$ cd hfc-key-store/$ lsStep 25: Enroll the user to query and invoke fabcar network (As Hyperledger Fabric is a permissionedblockchain that is why firstly we have to register the user using its certificate)$ cd ../$ node registerUser.jsStep 26: Query the Fabcar network using the following command (To access the ledger state)$ node query.jsStep 27: Now lets try to submit a new record for our Fabcar application on top of Hyperledger Fabric$ gedit invoke.jsMake the below changes in the file above to create a new record:Step 28: Now invoke the transaction using the below command. (To make any changes in the ledger state we have to invoke function)$ Ctrl + c$ node invoke.jsStep 29: Query the ledger to find the changes made by you using the following$ node query.jsCongrats to all for successfully running Fabcar demo. In the next part i will going to cover technical details on these two examples that we have covered. If you have any specific topic want to cover for these two examples make a comment to include it.Stay tuned for more updates!